// Generated by view binder compiler. Do not edit!
package com.example.drawer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.drawer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPnlAdopcionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdoptar;

  @NonNull
  public final LinearLayout btnAdoptarContainer;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final Button btnConsultar;

  @NonNull
  public final Button btnEnProceso;

  @NonNull
  public final CheckBox chkRequisito01;

  @NonNull
  public final CheckBox chkRequisito02;

  @NonNull
  public final CheckBox chkRequisito03;

  @NonNull
  public final CheckBox chkRequisito04;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText editTextIDAnimal;

  @NonNull
  public final ImageView ivFotoPerfil;

  @NonNull
  public final ImageView ivGenero;

  @NonNull
  public final ImageView ivNacimiento;

  @NonNull
  public final ImageView ivRequiere;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView txtDescripcionMascota;

  @NonNull
  public final TextView txtGenero;

  @NonNull
  public final TextView txtNacimiento;

  @NonNull
  public final TextView txtNombreMascota;

  @NonNull
  public final TextView txtRequiere;

  @NonNull
  public final View vContenedor;

  @NonNull
  public final View vContenedor2;

  private FragmentPnlAdopcionBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdoptar,
      @NonNull LinearLayout btnAdoptarContainer, @NonNull Button btnCancelar,
      @NonNull Button btnConsultar, @NonNull Button btnEnProceso, @NonNull CheckBox chkRequisito01,
      @NonNull CheckBox chkRequisito02, @NonNull CheckBox chkRequisito03,
      @NonNull CheckBox chkRequisito04, @NonNull ConstraintLayout constraintLayout,
      @NonNull EditText editTextIDAnimal, @NonNull ImageView ivFotoPerfil,
      @NonNull ImageView ivGenero, @NonNull ImageView ivNacimiento, @NonNull ImageView ivRequiere,
      @NonNull LinearLayout linearLayout, @NonNull TextView txtDescripcionMascota,
      @NonNull TextView txtGenero, @NonNull TextView txtNacimiento,
      @NonNull TextView txtNombreMascota, @NonNull TextView txtRequiere, @NonNull View vContenedor,
      @NonNull View vContenedor2) {
    this.rootView = rootView;
    this.btnAdoptar = btnAdoptar;
    this.btnAdoptarContainer = btnAdoptarContainer;
    this.btnCancelar = btnCancelar;
    this.btnConsultar = btnConsultar;
    this.btnEnProceso = btnEnProceso;
    this.chkRequisito01 = chkRequisito01;
    this.chkRequisito02 = chkRequisito02;
    this.chkRequisito03 = chkRequisito03;
    this.chkRequisito04 = chkRequisito04;
    this.constraintLayout = constraintLayout;
    this.editTextIDAnimal = editTextIDAnimal;
    this.ivFotoPerfil = ivFotoPerfil;
    this.ivGenero = ivGenero;
    this.ivNacimiento = ivNacimiento;
    this.ivRequiere = ivRequiere;
    this.linearLayout = linearLayout;
    this.txtDescripcionMascota = txtDescripcionMascota;
    this.txtGenero = txtGenero;
    this.txtNacimiento = txtNacimiento;
    this.txtNombreMascota = txtNombreMascota;
    this.txtRequiere = txtRequiere;
    this.vContenedor = vContenedor;
    this.vContenedor2 = vContenedor2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPnlAdopcionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPnlAdopcionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pnl_adopcion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPnlAdopcionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdoptar;
      Button btnAdoptar = ViewBindings.findChildViewById(rootView, id);
      if (btnAdoptar == null) {
        break missingId;
      }

      id = R.id.btnAdoptarContainer;
      LinearLayout btnAdoptarContainer = ViewBindings.findChildViewById(rootView, id);
      if (btnAdoptarContainer == null) {
        break missingId;
      }

      id = R.id.btnCancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.btnConsultar;
      Button btnConsultar = ViewBindings.findChildViewById(rootView, id);
      if (btnConsultar == null) {
        break missingId;
      }

      id = R.id.btnEnProceso;
      Button btnEnProceso = ViewBindings.findChildViewById(rootView, id);
      if (btnEnProceso == null) {
        break missingId;
      }

      id = R.id.chkRequisito01;
      CheckBox chkRequisito01 = ViewBindings.findChildViewById(rootView, id);
      if (chkRequisito01 == null) {
        break missingId;
      }

      id = R.id.chkRequisito02;
      CheckBox chkRequisito02 = ViewBindings.findChildViewById(rootView, id);
      if (chkRequisito02 == null) {
        break missingId;
      }

      id = R.id.chkRequisito03;
      CheckBox chkRequisito03 = ViewBindings.findChildViewById(rootView, id);
      if (chkRequisito03 == null) {
        break missingId;
      }

      id = R.id.chkRequisito04;
      CheckBox chkRequisito04 = ViewBindings.findChildViewById(rootView, id);
      if (chkRequisito04 == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.editTextIDAnimal;
      EditText editTextIDAnimal = ViewBindings.findChildViewById(rootView, id);
      if (editTextIDAnimal == null) {
        break missingId;
      }

      id = R.id.ivFotoPerfil;
      ImageView ivFotoPerfil = ViewBindings.findChildViewById(rootView, id);
      if (ivFotoPerfil == null) {
        break missingId;
      }

      id = R.id.ivGenero;
      ImageView ivGenero = ViewBindings.findChildViewById(rootView, id);
      if (ivGenero == null) {
        break missingId;
      }

      id = R.id.ivNacimiento;
      ImageView ivNacimiento = ViewBindings.findChildViewById(rootView, id);
      if (ivNacimiento == null) {
        break missingId;
      }

      id = R.id.ivRequiere;
      ImageView ivRequiere = ViewBindings.findChildViewById(rootView, id);
      if (ivRequiere == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.txtDescripcionMascota;
      TextView txtDescripcionMascota = ViewBindings.findChildViewById(rootView, id);
      if (txtDescripcionMascota == null) {
        break missingId;
      }

      id = R.id.txtGenero;
      TextView txtGenero = ViewBindings.findChildViewById(rootView, id);
      if (txtGenero == null) {
        break missingId;
      }

      id = R.id.txtNacimiento;
      TextView txtNacimiento = ViewBindings.findChildViewById(rootView, id);
      if (txtNacimiento == null) {
        break missingId;
      }

      id = R.id.txtNombreMascota;
      TextView txtNombreMascota = ViewBindings.findChildViewById(rootView, id);
      if (txtNombreMascota == null) {
        break missingId;
      }

      id = R.id.txtRequiere;
      TextView txtRequiere = ViewBindings.findChildViewById(rootView, id);
      if (txtRequiere == null) {
        break missingId;
      }

      id = R.id.vContenedor;
      View vContenedor = ViewBindings.findChildViewById(rootView, id);
      if (vContenedor == null) {
        break missingId;
      }

      id = R.id.vContenedor2;
      View vContenedor2 = ViewBindings.findChildViewById(rootView, id);
      if (vContenedor2 == null) {
        break missingId;
      }

      return new FragmentPnlAdopcionBinding((ConstraintLayout) rootView, btnAdoptar,
          btnAdoptarContainer, btnCancelar, btnConsultar, btnEnProceso, chkRequisito01,
          chkRequisito02, chkRequisito03, chkRequisito04, constraintLayout, editTextIDAnimal,
          ivFotoPerfil, ivGenero, ivNacimiento, ivRequiere, linearLayout, txtDescripcionMascota,
          txtGenero, txtNacimiento, txtNombreMascota, txtRequiere, vContenedor, vContenedor2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
